//#line 2 "/opt/ros/jade/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
// 
// File autogenerated for the ahl_robot_samples package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

#ifndef __ahl_robot_samples__PR2PARAMCONFIG_H__
#define __ahl_robot_samples__PR2PARAMCONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace ahl_robot_samples
{
  class Pr2ParamConfigStatics;
  
  class Pr2ParamConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(Pr2ParamConfig &config, const Pr2ParamConfig &max, const Pr2ParamConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const Pr2ParamConfig &config1, const Pr2ParamConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, Pr2ParamConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const Pr2ParamConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, Pr2ParamConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const Pr2ParamConfig &config) const = 0;
      virtual void getValue(const Pr2ParamConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string name, std::string type, uint32_t level, 
          std::string description, std::string edit_method, T Pr2ParamConfig::* f) :
        AbstractParamDescription(name, type, level, description, edit_method),
        field(f)
      {}

      T (Pr2ParamConfig::* field);

      virtual void clamp(Pr2ParamConfig &config, const Pr2ParamConfig &max, const Pr2ParamConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const Pr2ParamConfig &config1, const Pr2ParamConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, Pr2ParamConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const Pr2ParamConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, Pr2ParamConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const Pr2ParamConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const Pr2ParamConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, Pr2ParamConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string name, std::string type, int parent, int id, bool s, T PT::* f) : AbstractGroupDescription(name, type, parent, id, s), field(f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, Pr2ParamConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<Pr2ParamConfig::AbstractGroupDescriptionConstPtr> groups;
    };
    
class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(Pr2ParamConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);


      }
    }

    

    bool state;
    std::string name;

    class PR2_PARAM
{
  public:
    PR2_PARAM()
    {
      state = true;
      name = "pr2_param";
    }

    void setParams(Pr2ParamConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("show_target"==(*_i)->name){show_target = boost::any_cast<bool>(val);}
        if("sin_x_l"==(*_i)->name){sin_x_l = boost::any_cast<bool>(val);}
        if("sin_y_l"==(*_i)->name){sin_y_l = boost::any_cast<bool>(val);}
        if("sin_z_l"==(*_i)->name){sin_z_l = boost::any_cast<bool>(val);}
        if("sin_x_r"==(*_i)->name){sin_x_r = boost::any_cast<bool>(val);}
        if("sin_y_r"==(*_i)->name){sin_y_r = boost::any_cast<bool>(val);}
        if("sin_z_r"==(*_i)->name){sin_z_r = boost::any_cast<bool>(val);}
        if("x_l"==(*_i)->name){x_l = boost::any_cast<double>(val);}
        if("y_l"==(*_i)->name){y_l = boost::any_cast<double>(val);}
        if("z_l"==(*_i)->name){z_l = boost::any_cast<double>(val);}
        if("roll_l"==(*_i)->name){roll_l = boost::any_cast<double>(val);}
        if("pitch_l"==(*_i)->name){pitch_l = boost::any_cast<double>(val);}
        if("yaw_l"==(*_i)->name){yaw_l = boost::any_cast<double>(val);}
        if("x_r"==(*_i)->name){x_r = boost::any_cast<double>(val);}
        if("y_r"==(*_i)->name){y_r = boost::any_cast<double>(val);}
        if("z_r"==(*_i)->name){z_r = boost::any_cast<double>(val);}
        if("roll_r"==(*_i)->name){roll_r = boost::any_cast<double>(val);}
        if("pitch_r"==(*_i)->name){pitch_r = boost::any_cast<double>(val);}
        if("yaw_r"==(*_i)->name){yaw_r = boost::any_cast<double>(val);}
        if("Rf_roll_l"==(*_i)->name){Rf_roll_l = boost::any_cast<double>(val);}
        if("Rf_pitch_l"==(*_i)->name){Rf_pitch_l = boost::any_cast<double>(val);}
        if("Rf_yaw_l"==(*_i)->name){Rf_yaw_l = boost::any_cast<double>(val);}
        if("Rm_roll_l"==(*_i)->name){Rm_roll_l = boost::any_cast<double>(val);}
        if("Rm_pitch_l"==(*_i)->name){Rm_pitch_l = boost::any_cast<double>(val);}
        if("Rm_yaw_l"==(*_i)->name){Rm_yaw_l = boost::any_cast<double>(val);}
        if("fx_l"==(*_i)->name){fx_l = boost::any_cast<double>(val);}
        if("fy_l"==(*_i)->name){fy_l = boost::any_cast<double>(val);}
        if("fz_l"==(*_i)->name){fz_l = boost::any_cast<double>(val);}
        if("mx_l"==(*_i)->name){mx_l = boost::any_cast<double>(val);}
        if("my_l"==(*_i)->name){my_l = boost::any_cast<double>(val);}
        if("mz_l"==(*_i)->name){mz_l = boost::any_cast<double>(val);}
        if("Rf_roll_r"==(*_i)->name){Rf_roll_r = boost::any_cast<double>(val);}
        if("Rf_pitch_r"==(*_i)->name){Rf_pitch_r = boost::any_cast<double>(val);}
        if("Rf_yaw_r"==(*_i)->name){Rf_yaw_r = boost::any_cast<double>(val);}
        if("Rm_roll_r"==(*_i)->name){Rm_roll_r = boost::any_cast<double>(val);}
        if("Rm_pitch_r"==(*_i)->name){Rm_pitch_r = boost::any_cast<double>(val);}
        if("Rm_yaw_r"==(*_i)->name){Rm_yaw_r = boost::any_cast<double>(val);}
        if("fx_r"==(*_i)->name){fx_r = boost::any_cast<double>(val);}
        if("fy_r"==(*_i)->name){fy_r = boost::any_cast<double>(val);}
        if("fz_r"==(*_i)->name){fz_r = boost::any_cast<double>(val);}
        if("mx_r"==(*_i)->name){mx_r = boost::any_cast<double>(val);}
        if("my_r"==(*_i)->name){my_r = boost::any_cast<double>(val);}
        if("mz_r"==(*_i)->name){mz_r = boost::any_cast<double>(val);}
        if("q_base1"==(*_i)->name){q_base1 = boost::any_cast<double>(val);}
        if("q_base2"==(*_i)->name){q_base2 = boost::any_cast<double>(val);}
        if("q_base3"==(*_i)->name){q_base3 = boost::any_cast<double>(val);}
        if("q_base4"==(*_i)->name){q_base4 = boost::any_cast<double>(val);}
        if("q_l1"==(*_i)->name){q_l1 = boost::any_cast<double>(val);}
        if("q_l2"==(*_i)->name){q_l2 = boost::any_cast<double>(val);}
        if("q_l3"==(*_i)->name){q_l3 = boost::any_cast<double>(val);}
        if("q_l4"==(*_i)->name){q_l4 = boost::any_cast<double>(val);}
        if("q_l5"==(*_i)->name){q_l5 = boost::any_cast<double>(val);}
        if("q_l6"==(*_i)->name){q_l6 = boost::any_cast<double>(val);}
        if("q_l7"==(*_i)->name){q_l7 = boost::any_cast<double>(val);}
        if("q_r1"==(*_i)->name){q_r1 = boost::any_cast<double>(val);}
        if("q_r2"==(*_i)->name){q_r2 = boost::any_cast<double>(val);}
        if("q_r3"==(*_i)->name){q_r3 = boost::any_cast<double>(val);}
        if("q_r4"==(*_i)->name){q_r4 = boost::any_cast<double>(val);}
        if("q_r5"==(*_i)->name){q_r5 = boost::any_cast<double>(val);}
        if("q_r6"==(*_i)->name){q_r6 = boost::any_cast<double>(val);}
        if("q_r7"==(*_i)->name){q_r7 = boost::any_cast<double>(val);}
      }
    }

    bool show_target;
bool sin_x_l;
bool sin_y_l;
bool sin_z_l;
bool sin_x_r;
bool sin_y_r;
bool sin_z_r;
double x_l;
double y_l;
double z_l;
double roll_l;
double pitch_l;
double yaw_l;
double x_r;
double y_r;
double z_r;
double roll_r;
double pitch_r;
double yaw_r;
double Rf_roll_l;
double Rf_pitch_l;
double Rf_yaw_l;
double Rm_roll_l;
double Rm_pitch_l;
double Rm_yaw_l;
double fx_l;
double fy_l;
double fz_l;
double mx_l;
double my_l;
double mz_l;
double Rf_roll_r;
double Rf_pitch_r;
double Rf_yaw_r;
double Rm_roll_r;
double Rm_pitch_r;
double Rm_yaw_r;
double fx_r;
double fy_r;
double fz_r;
double mx_r;
double my_r;
double mz_r;
double q_base1;
double q_base2;
double q_base3;
double q_base4;
double q_l1;
double q_l2;
double q_l3;
double q_l4;
double q_l5;
double q_l6;
double q_l7;
double q_r1;
double q_r2;
double q_r3;
double q_r4;
double q_r5;
double q_r6;
double q_r7;

    bool state;
    std::string name;

    
}pr2_param;

}groups;



//#line 9 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      bool show_target;
//#line 10 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      bool sin_x_l;
//#line 11 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      bool sin_y_l;
//#line 12 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      bool sin_z_l;
//#line 13 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      bool sin_x_r;
//#line 14 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      bool sin_y_r;
//#line 15 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      bool sin_z_r;
//#line 17 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double x_l;
//#line 18 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double y_l;
//#line 19 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double z_l;
//#line 21 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double roll_l;
//#line 22 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double pitch_l;
//#line 23 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double yaw_l;
//#line 25 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double x_r;
//#line 26 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double y_r;
//#line 27 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double z_r;
//#line 29 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double roll_r;
//#line 30 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double pitch_r;
//#line 31 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double yaw_r;
//#line 33 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rf_roll_l;
//#line 34 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rf_pitch_l;
//#line 35 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rf_yaw_l;
//#line 37 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rm_roll_l;
//#line 38 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rm_pitch_l;
//#line 39 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rm_yaw_l;
//#line 41 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double fx_l;
//#line 42 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double fy_l;
//#line 43 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double fz_l;
//#line 45 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double mx_l;
//#line 46 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double my_l;
//#line 47 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double mz_l;
//#line 49 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rf_roll_r;
//#line 50 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rf_pitch_r;
//#line 51 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rf_yaw_r;
//#line 53 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rm_roll_r;
//#line 54 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rm_pitch_r;
//#line 55 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double Rm_yaw_r;
//#line 57 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double fx_r;
//#line 58 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double fy_r;
//#line 59 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double fz_r;
//#line 61 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double mx_r;
//#line 62 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double my_r;
//#line 63 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double mz_r;
//#line 65 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_base1;
//#line 66 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_base2;
//#line 67 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_base3;
//#line 68 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_base4;
//#line 69 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_l1;
//#line 70 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_l2;
//#line 71 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_l3;
//#line 72 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_l4;
//#line 73 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_l5;
//#line 74 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_l6;
//#line 75 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_l7;
//#line 76 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_r1;
//#line 77 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_r2;
//#line 78 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_r3;
//#line 79 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_r4;
//#line 80 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_r5;
//#line 81 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_r6;
//#line 82 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      double q_r7;
//#line 218 "/opt/ros/jade/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("Pr2ParamConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const Pr2ParamConfig &__max__ = __getMax__();
      const Pr2ParamConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const Pr2ParamConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const Pr2ParamConfig &__getDefault__();
    static const Pr2ParamConfig &__getMax__();
    static const Pr2ParamConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();
    
  private:
    static const Pr2ParamConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void Pr2ParamConfig::ParamDescription<std::string>::clamp(Pr2ParamConfig &config, const Pr2ParamConfig &max, const Pr2ParamConfig &min) const
  {
    return;
  }

  class Pr2ParamConfigStatics
  {
    friend class Pr2ParamConfig;
    
    Pr2ParamConfigStatics()
    {
Pr2ParamConfig::GroupDescription<Pr2ParamConfig::DEFAULT, Pr2ParamConfig> Default("Default", "", 0, 0, true, &Pr2ParamConfig::groups);
Pr2ParamConfig::GroupDescription<Pr2ParamConfig::DEFAULT::PR2_PARAM, Pr2ParamConfig::DEFAULT> pr2_param("pr2_param", "", 0, 1, true, &Pr2ParamConfig::DEFAULT::pr2_param);
//#line 9 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.show_target = 0;
//#line 9 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.show_target = 1;
//#line 9 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.show_target = 1;
//#line 9 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("show_target", "bool", 0, "Show reference position", "", &Pr2ParamConfig::show_target)));
//#line 9 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("show_target", "bool", 0, "Show reference position", "", &Pr2ParamConfig::show_target)));
//#line 10 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.sin_x_l = 0;
//#line 10 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.sin_x_l = 1;
//#line 10 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.sin_x_l = 0;
//#line 10 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_x_l", "bool", 0, "desired x sin wave", "", &Pr2ParamConfig::sin_x_l)));
//#line 10 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_x_l", "bool", 0, "desired x sin wave", "", &Pr2ParamConfig::sin_x_l)));
//#line 11 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.sin_y_l = 0;
//#line 11 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.sin_y_l = 1;
//#line 11 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.sin_y_l = 0;
//#line 11 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_y_l", "bool", 0, "desired y sin wave", "", &Pr2ParamConfig::sin_y_l)));
//#line 11 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_y_l", "bool", 0, "desired y sin wave", "", &Pr2ParamConfig::sin_y_l)));
//#line 12 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.sin_z_l = 0;
//#line 12 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.sin_z_l = 1;
//#line 12 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.sin_z_l = 0;
//#line 12 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_z_l", "bool", 0, "desired z sin wave", "", &Pr2ParamConfig::sin_z_l)));
//#line 12 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_z_l", "bool", 0, "desired z sin wave", "", &Pr2ParamConfig::sin_z_l)));
//#line 13 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.sin_x_r = 0;
//#line 13 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.sin_x_r = 1;
//#line 13 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.sin_x_r = 0;
//#line 13 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_x_r", "bool", 0, "desired x sin wave", "", &Pr2ParamConfig::sin_x_r)));
//#line 13 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_x_r", "bool", 0, "desired x sin wave", "", &Pr2ParamConfig::sin_x_r)));
//#line 14 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.sin_y_r = 0;
//#line 14 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.sin_y_r = 1;
//#line 14 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.sin_y_r = 0;
//#line 14 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_y_r", "bool", 0, "desired y sin wave", "", &Pr2ParamConfig::sin_y_r)));
//#line 14 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_y_r", "bool", 0, "desired y sin wave", "", &Pr2ParamConfig::sin_y_r)));
//#line 15 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.sin_z_r = 0;
//#line 15 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.sin_z_r = 1;
//#line 15 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.sin_z_r = 0;
//#line 15 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_z_r", "bool", 0, "desired z sin wave", "", &Pr2ParamConfig::sin_z_r)));
//#line 15 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<bool>("sin_z_r", "bool", 0, "desired z sin wave", "", &Pr2ParamConfig::sin_z_r)));
//#line 17 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.x_l = -3.0;
//#line 17 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.x_l = 3.0;
//#line 17 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.x_l = 0.6;
//#line 17 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("x_l", "double", 0, "desired x for left hand", "", &Pr2ParamConfig::x_l)));
//#line 17 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("x_l", "double", 0, "desired x for left hand", "", &Pr2ParamConfig::x_l)));
//#line 18 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.y_l = -3.0;
//#line 18 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.y_l = 3.0;
//#line 18 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.y_l = 0.3;
//#line 18 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("y_l", "double", 0, "desired y for left hand", "", &Pr2ParamConfig::y_l)));
//#line 18 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("y_l", "double", 0, "desired y for left hand", "", &Pr2ParamConfig::y_l)));
//#line 19 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.z_l = 0.0;
//#line 19 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.z_l = 3.0;
//#line 19 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.z_l = 0.6;
//#line 19 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("z_l", "double", 0, "desired z for left hand", "", &Pr2ParamConfig::z_l)));
//#line 19 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("z_l", "double", 0, "desired z for left hand", "", &Pr2ParamConfig::z_l)));
//#line 21 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.roll_l = -3.14;
//#line 21 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.roll_l = 3.14;
//#line 21 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.roll_l = 0.0;
//#line 21 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("roll_l", "double", 0, "desired roll  for left hand", "", &Pr2ParamConfig::roll_l)));
//#line 21 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("roll_l", "double", 0, "desired roll  for left hand", "", &Pr2ParamConfig::roll_l)));
//#line 22 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.pitch_l = -3.14;
//#line 22 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.pitch_l = 3.14;
//#line 22 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.pitch_l = 0.0;
//#line 22 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("pitch_l", "double", 0, "desired pitch for left hand", "", &Pr2ParamConfig::pitch_l)));
//#line 22 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("pitch_l", "double", 0, "desired pitch for left hand", "", &Pr2ParamConfig::pitch_l)));
//#line 23 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.yaw_l = -3.14;
//#line 23 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.yaw_l = 3.14;
//#line 23 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.yaw_l = 0.0;
//#line 23 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("yaw_l", "double", 0, "desired yaw   for left hand", "", &Pr2ParamConfig::yaw_l)));
//#line 23 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("yaw_l", "double", 0, "desired yaw   for left hand", "", &Pr2ParamConfig::yaw_l)));
//#line 25 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.x_r = -3.0;
//#line 25 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.x_r = 3.0;
//#line 25 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.x_r = 0.6;
//#line 25 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("x_r", "double", 0, "desired x for right hand", "", &Pr2ParamConfig::x_r)));
//#line 25 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("x_r", "double", 0, "desired x for right hand", "", &Pr2ParamConfig::x_r)));
//#line 26 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.y_r = -3.0;
//#line 26 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.y_r = 3.0;
//#line 26 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.y_r = -0.3;
//#line 26 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("y_r", "double", 0, "desired y for right hand", "", &Pr2ParamConfig::y_r)));
//#line 26 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("y_r", "double", 0, "desired y for right hand", "", &Pr2ParamConfig::y_r)));
//#line 27 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.z_r = 0.0;
//#line 27 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.z_r = 3.0;
//#line 27 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.z_r = 0.6;
//#line 27 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("z_r", "double", 0, "desired z for right hand", "", &Pr2ParamConfig::z_r)));
//#line 27 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("z_r", "double", 0, "desired z for right hand", "", &Pr2ParamConfig::z_r)));
//#line 29 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.roll_r = -3.14;
//#line 29 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.roll_r = 3.14;
//#line 29 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.roll_r = 0.0;
//#line 29 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("roll_r", "double", 0, "desired roll  for right hand", "", &Pr2ParamConfig::roll_r)));
//#line 29 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("roll_r", "double", 0, "desired roll  for right hand", "", &Pr2ParamConfig::roll_r)));
//#line 30 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.pitch_r = -3.14;
//#line 30 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.pitch_r = 3.14;
//#line 30 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.pitch_r = 0.0;
//#line 30 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("pitch_r", "double", 0, "desired pitch for right hand", "", &Pr2ParamConfig::pitch_r)));
//#line 30 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("pitch_r", "double", 0, "desired pitch for right hand", "", &Pr2ParamConfig::pitch_r)));
//#line 31 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.yaw_r = -3.14;
//#line 31 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.yaw_r = 3.14;
//#line 31 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.yaw_r = 0.0;
//#line 31 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("yaw_r", "double", 0, "desired yaw   for right hand", "", &Pr2ParamConfig::yaw_r)));
//#line 31 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("yaw_r", "double", 0, "desired yaw   for right hand", "", &Pr2ParamConfig::yaw_r)));
//#line 33 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rf_roll_l = -3.14;
//#line 33 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rf_roll_l = 3.14;
//#line 33 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rf_roll_l = 0.0;
//#line 33 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_roll_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_roll_l)));
//#line 33 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_roll_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_roll_l)));
//#line 34 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rf_pitch_l = -3.14;
//#line 34 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rf_pitch_l = 3.14;
//#line 34 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rf_pitch_l = 0.0;
//#line 34 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_pitch_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_pitch_l)));
//#line 34 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_pitch_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_pitch_l)));
//#line 35 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rf_yaw_l = -3.14;
//#line 35 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rf_yaw_l = 3.14;
//#line 35 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rf_yaw_l = 0.0;
//#line 35 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_yaw_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_yaw_l)));
//#line 35 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_yaw_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_yaw_l)));
//#line 37 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rm_roll_l = -3.14;
//#line 37 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rm_roll_l = 3.14;
//#line 37 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rm_roll_l = 0.0;
//#line 37 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_roll_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_roll_l)));
//#line 37 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_roll_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_roll_l)));
//#line 38 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rm_pitch_l = -3.14;
//#line 38 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rm_pitch_l = 3.14;
//#line 38 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rm_pitch_l = 0.0;
//#line 38 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_pitch_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_pitch_l)));
//#line 38 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_pitch_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_pitch_l)));
//#line 39 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rm_yaw_l = -3.14;
//#line 39 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rm_yaw_l = 3.14;
//#line 39 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rm_yaw_l = 0.0;
//#line 39 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_yaw_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_yaw_l)));
//#line 39 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_yaw_l", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_yaw_l)));
//#line 41 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.fx_l = -20.0;
//#line 41 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.fx_l = 20.0;
//#line 41 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.fx_l = 0.0;
//#line 41 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fx_l", "double", 0, "desired force for left hand", "", &Pr2ParamConfig::fx_l)));
//#line 41 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fx_l", "double", 0, "desired force for left hand", "", &Pr2ParamConfig::fx_l)));
//#line 42 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.fy_l = -20.0;
//#line 42 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.fy_l = 20.0;
//#line 42 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.fy_l = 0.0;
//#line 42 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fy_l", "double", 0, "desired force for left hand", "", &Pr2ParamConfig::fy_l)));
//#line 42 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fy_l", "double", 0, "desired force for left hand", "", &Pr2ParamConfig::fy_l)));
//#line 43 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.fz_l = -20.0;
//#line 43 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.fz_l = 20.0;
//#line 43 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.fz_l = 0.0;
//#line 43 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fz_l", "double", 0, "desired force for left hand", "", &Pr2ParamConfig::fz_l)));
//#line 43 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fz_l", "double", 0, "desired force for left hand", "", &Pr2ParamConfig::fz_l)));
//#line 45 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.mx_l = -10.0;
//#line 45 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.mx_l = 10.0;
//#line 45 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.mx_l = 0.0;
//#line 45 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("mx_l", "double", 0, "desired moment for left hand", "", &Pr2ParamConfig::mx_l)));
//#line 45 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("mx_l", "double", 0, "desired moment for left hand", "", &Pr2ParamConfig::mx_l)));
//#line 46 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.my_l = -10.0;
//#line 46 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.my_l = 10.0;
//#line 46 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.my_l = 0.0;
//#line 46 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("my_l", "double", 0, "desired moment for left hand", "", &Pr2ParamConfig::my_l)));
//#line 46 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("my_l", "double", 0, "desired moment for left hand", "", &Pr2ParamConfig::my_l)));
//#line 47 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.mz_l = -10.0;
//#line 47 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.mz_l = 10.0;
//#line 47 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.mz_l = 0.0;
//#line 47 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("mz_l", "double", 0, "desired moment for left hand", "", &Pr2ParamConfig::mz_l)));
//#line 47 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("mz_l", "double", 0, "desired moment for left hand", "", &Pr2ParamConfig::mz_l)));
//#line 49 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rf_roll_r = -3.14;
//#line 49 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rf_roll_r = 3.14;
//#line 49 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rf_roll_r = 0.0;
//#line 49 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_roll_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_roll_r)));
//#line 49 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_roll_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_roll_r)));
//#line 50 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rf_pitch_r = -3.14;
//#line 50 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rf_pitch_r = 3.14;
//#line 50 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rf_pitch_r = 0.0;
//#line 50 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_pitch_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_pitch_r)));
//#line 50 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_pitch_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_pitch_r)));
//#line 51 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rf_yaw_r = -3.14;
//#line 51 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rf_yaw_r = 3.14;
//#line 51 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rf_yaw_r = 0.0;
//#line 51 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_yaw_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_yaw_r)));
//#line 51 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rf_yaw_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rf_yaw_r)));
//#line 53 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rm_roll_r = -3.14;
//#line 53 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rm_roll_r = 3.14;
//#line 53 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rm_roll_r = 0.0;
//#line 53 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_roll_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_roll_r)));
//#line 53 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_roll_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_roll_r)));
//#line 54 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rm_pitch_r = -3.14;
//#line 54 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rm_pitch_r = 3.14;
//#line 54 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rm_pitch_r = 0.0;
//#line 54 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_pitch_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_pitch_r)));
//#line 54 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_pitch_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_pitch_r)));
//#line 55 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.Rm_yaw_r = -3.14;
//#line 55 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.Rm_yaw_r = 3.14;
//#line 55 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.Rm_yaw_r = 0.0;
//#line 55 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_yaw_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_yaw_r)));
//#line 55 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("Rm_yaw_r", "double", 0, "roll angle of force control", "", &Pr2ParamConfig::Rm_yaw_r)));
//#line 57 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.fx_r = -20.0;
//#line 57 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.fx_r = 20.0;
//#line 57 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.fx_r = 0.0;
//#line 57 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fx_r", "double", 0, "desired force for right hand", "", &Pr2ParamConfig::fx_r)));
//#line 57 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fx_r", "double", 0, "desired force for right hand", "", &Pr2ParamConfig::fx_r)));
//#line 58 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.fy_r = -20.0;
//#line 58 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.fy_r = 20.0;
//#line 58 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.fy_r = 0.0;
//#line 58 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fy_r", "double", 0, "desired force for right hand", "", &Pr2ParamConfig::fy_r)));
//#line 58 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fy_r", "double", 0, "desired force for right hand", "", &Pr2ParamConfig::fy_r)));
//#line 59 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.fz_r = -20.0;
//#line 59 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.fz_r = 20.0;
//#line 59 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.fz_r = 0.0;
//#line 59 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fz_r", "double", 0, "desired force for right hand", "", &Pr2ParamConfig::fz_r)));
//#line 59 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("fz_r", "double", 0, "desired force for right hand", "", &Pr2ParamConfig::fz_r)));
//#line 61 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.mx_r = -10.0;
//#line 61 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.mx_r = 10.0;
//#line 61 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.mx_r = 0.0;
//#line 61 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("mx_r", "double", 0, "desired moment for right hand", "", &Pr2ParamConfig::mx_r)));
//#line 61 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("mx_r", "double", 0, "desired moment for right hand", "", &Pr2ParamConfig::mx_r)));
//#line 62 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.my_r = -10.0;
//#line 62 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.my_r = 10.0;
//#line 62 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.my_r = 0.0;
//#line 62 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("my_r", "double", 0, "desired moment for right hand", "", &Pr2ParamConfig::my_r)));
//#line 62 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("my_r", "double", 0, "desired moment for right hand", "", &Pr2ParamConfig::my_r)));
//#line 63 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.mz_r = -10.0;
//#line 63 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.mz_r = 10.0;
//#line 63 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.mz_r = 0.0;
//#line 63 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("mz_r", "double", 0, "desired moment for right hand", "", &Pr2ParamConfig::mz_r)));
//#line 63 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("mz_r", "double", 0, "desired moment for right hand", "", &Pr2ParamConfig::mz_r)));
//#line 65 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_base1 = -3.0;
//#line 65 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_base1 = 3.0;
//#line 65 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_base1 = 0.0;
//#line 65 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_base1", "double", 0, "displacement of base along x axis", "", &Pr2ParamConfig::q_base1)));
//#line 65 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_base1", "double", 0, "displacement of base along x axis", "", &Pr2ParamConfig::q_base1)));
//#line 66 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_base2 = -3.0;
//#line 66 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_base2 = 3.0;
//#line 66 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_base2 = 0.0;
//#line 66 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_base2", "double", 0, "displacement of base along y axis", "", &Pr2ParamConfig::q_base2)));
//#line 66 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_base2", "double", 0, "displacement of base along y axis", "", &Pr2ParamConfig::q_base2)));
//#line 67 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_base3 = -3.1;
//#line 67 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_base3 = 3.1;
//#line 67 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_base3 = 0.0;
//#line 67 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_base3", "double", 0, "orientation of base", "", &Pr2ParamConfig::q_base3)));
//#line 67 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_base3", "double", 0, "orientation of base", "", &Pr2ParamConfig::q_base3)));
//#line 68 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_base4 = 0.0;
//#line 68 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_base4 = 0.3;
//#line 68 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_base4 = 0.15;
//#line 68 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_base4", "double", 0, "displacement of torso", "", &Pr2ParamConfig::q_base4)));
//#line 68 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_base4", "double", 0, "displacement of torso", "", &Pr2ParamConfig::q_base4)));
//#line 69 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_l1 = -0.7;
//#line 69 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_l1 = 2.2;
//#line 69 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_l1 = 0.75;
//#line 69 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l1", "double", 0, "angle of left shoulder pan", "", &Pr2ParamConfig::q_l1)));
//#line 69 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l1", "double", 0, "angle of left shoulder pan", "", &Pr2ParamConfig::q_l1)));
//#line 70 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_l2 = -0.5;
//#line 70 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_l2 = 1.3;
//#line 70 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_l2 = 0.4;
//#line 70 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l2", "double", 0, "angle of left shoulder lift", "", &Pr2ParamConfig::q_l2)));
//#line 70 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l2", "double", 0, "angle of left shoulder lift", "", &Pr2ParamConfig::q_l2)));
//#line 71 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_l3 = -0.8;
//#line 71 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_l3 = 3.9;
//#line 71 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_l3 = 1.55;
//#line 71 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l3", "double", 0, "angle of left upper arm", "", &Pr2ParamConfig::q_l3)));
//#line 71 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l3", "double", 0, "angle of left upper arm", "", &Pr2ParamConfig::q_l3)));
//#line 72 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_l4 = -2.3;
//#line 72 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_l4 = 0.0;
//#line 72 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_l4 = -1.15;
//#line 72 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l4", "double", 0, "angle of left elbow", "", &Pr2ParamConfig::q_l4)));
//#line 72 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l4", "double", 0, "angle of left elbow", "", &Pr2ParamConfig::q_l4)));
//#line 73 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_l5 = -3.1;
//#line 73 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_l5 = 3.1;
//#line 73 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_l5 = 0.0;
//#line 73 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l5", "double", 0, "angle of left forearm", "", &Pr2ParamConfig::q_l5)));
//#line 73 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l5", "double", 0, "angle of left forearm", "", &Pr2ParamConfig::q_l5)));
//#line 74 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_l6 = -2.1;
//#line 74 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_l6 = 0.0;
//#line 74 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_l6 = -1.05;
//#line 74 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l6", "double", 0, "angle of left wrist flex", "", &Pr2ParamConfig::q_l6)));
//#line 74 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l6", "double", 0, "angle of left wrist flex", "", &Pr2ParamConfig::q_l6)));
//#line 75 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_l7 = -3.1;
//#line 75 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_l7 = 3.1;
//#line 75 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_l7 = 0.0;
//#line 75 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l7", "double", 0, "angle of left wrist roll", "", &Pr2ParamConfig::q_l7)));
//#line 75 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_l7", "double", 0, "angle of left wrist roll", "", &Pr2ParamConfig::q_l7)));
//#line 76 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_r1 = -2.2;
//#line 76 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_r1 = 0.7;
//#line 76 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_r1 = -0.75;
//#line 76 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r1", "double", 0, "angle of right shoulder pan", "", &Pr2ParamConfig::q_r1)));
//#line 76 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r1", "double", 0, "angle of right shoulder pan", "", &Pr2ParamConfig::q_r1)));
//#line 77 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_r2 = -0.5;
//#line 77 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_r2 = 1.3;
//#line 77 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_r2 = 0.4;
//#line 77 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r2", "double", 0, "angle of right shoulder lift", "", &Pr2ParamConfig::q_r2)));
//#line 77 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r2", "double", 0, "angle of right shoulder lift", "", &Pr2ParamConfig::q_r2)));
//#line 78 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_r3 = -3.9;
//#line 78 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_r3 = 0.8;
//#line 78 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_r3 = -1.55;
//#line 78 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r3", "double", 0, "angle of right upper arm", "", &Pr2ParamConfig::q_r3)));
//#line 78 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r3", "double", 0, "angle of right upper arm", "", &Pr2ParamConfig::q_r3)));
//#line 79 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_r4 = -2.3;
//#line 79 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_r4 = 0.0;
//#line 79 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_r4 = -1.15;
//#line 79 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r4", "double", 0, "angle of right elbow", "", &Pr2ParamConfig::q_r4)));
//#line 79 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r4", "double", 0, "angle of right elbow", "", &Pr2ParamConfig::q_r4)));
//#line 80 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_r5 = -3.1;
//#line 80 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_r5 = 3.1;
//#line 80 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_r5 = 0.0;
//#line 80 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r5", "double", 0, "angle of right forearm", "", &Pr2ParamConfig::q_r5)));
//#line 80 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r5", "double", 0, "angle of right forearm", "", &Pr2ParamConfig::q_r5)));
//#line 81 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_r6 = -2.1;
//#line 81 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_r6 = 0.0;
//#line 81 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_r6 = -1.05;
//#line 81 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r6", "double", 0, "angle of right wrist flex", "", &Pr2ParamConfig::q_r6)));
//#line 81 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r6", "double", 0, "angle of right wrist flex", "", &Pr2ParamConfig::q_r6)));
//#line 82 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __min__.q_r7 = -3.1;
//#line 82 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __max__.q_r7 = 3.1;
//#line 82 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __default__.q_r7 = 0.0;
//#line 82 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      pr2_param.abstract_parameters.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r7", "double", 0, "angle of right wrist roll", "", &Pr2ParamConfig::q_r7)));
//#line 82 "/home/bilynbk/catkin_ws_ahl/src/ahl_ros_packages/ahl_wbc/samples/ahl_robot_samples/cfg/Pr2Param.cfg"
      __param_descriptions__.push_back(Pr2ParamConfig::AbstractParamDescriptionConstPtr(new Pr2ParamConfig::ParamDescription<double>("q_r7", "double", 0, "angle of right wrist roll", "", &Pr2ParamConfig::q_r7)));
//#line 109 "/opt/ros/jade/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      pr2_param.convertParams();
//#line 109 "/opt/ros/jade/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.groups.push_back(Pr2ParamConfig::AbstractGroupDescriptionConstPtr(new Pr2ParamConfig::GroupDescription<Pr2ParamConfig::DEFAULT::PR2_PARAM, Pr2ParamConfig::DEFAULT>(pr2_param)));
//#line 109 "/opt/ros/jade/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(Pr2ParamConfig::AbstractGroupDescriptionConstPtr(new Pr2ParamConfig::GroupDescription<Pr2ParamConfig::DEFAULT::PR2_PARAM, Pr2ParamConfig::DEFAULT>(pr2_param)));
//#line 235 "/opt/ros/jade/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 235 "/opt/ros/jade/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(Pr2ParamConfig::AbstractGroupDescriptionConstPtr(new Pr2ParamConfig::GroupDescription<Pr2ParamConfig::DEFAULT, Pr2ParamConfig>(Default)));
//#line 353 "/opt/ros/jade/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<Pr2ParamConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__); 
    }
    std::vector<Pr2ParamConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<Pr2ParamConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    Pr2ParamConfig __max__;
    Pr2ParamConfig __min__;
    Pr2ParamConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const Pr2ParamConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static Pr2ParamConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &Pr2ParamConfig::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const Pr2ParamConfig &Pr2ParamConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const Pr2ParamConfig &Pr2ParamConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const Pr2ParamConfig &Pr2ParamConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<Pr2ParamConfig::AbstractParamDescriptionConstPtr> &Pr2ParamConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<Pr2ParamConfig::AbstractGroupDescriptionConstPtr> &Pr2ParamConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const Pr2ParamConfigStatics *Pr2ParamConfig::__get_statics__()
  {
    const static Pr2ParamConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = Pr2ParamConfigStatics::get_instance();
    
    return statics;
  }


}

#endif // __PR2PARAMRECONFIGURATOR_H__
